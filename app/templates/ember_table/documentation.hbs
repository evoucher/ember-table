    {{!-- To add shadow main-content-container-shadow --}}
    <div class="col-md-10 col-md-offset-2 left-border main-content-container">
      <h1>API &amp; Documentation</h1>
      <h2>Ember.Table.TableComponent Options</h2>

      <table class="table ember-table-options">
        <tr>
          <th style="width: 200px;">Option</th>
          <th style="width: 150px;">Default</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>content <b>(required)</b></td>
          <td>null</td>
          <td>
            <p>
              An array which returns row objects. Each column definition
              must define a function which takes a row object and
              returns the value for that cell. E.g. the row object might
              be a hash, in which case the column definition's function
              might simply get the value corresponding to its key. The
              row object might be a function, in which case the column
              definition's function might evaluate the function at a
              given value. Etc.
            </p>
          </td>
        <tr>
          <td>columns <b>(required)</b></td>
          <td>null</td>
          <td>
            <p>
              An array of column definitions. Allows you to specify
              column configuration - e.g. whether the column is resizable,
              its css class, etc. (see column definition API for more
              details)
            </p>
          </td>
        </tr>
        <tr>
          <td>numFixedColumns</td>
          <td>0</td>
          <td><p>The number of frozen column on the left table.</p></td>
        </tr>
        <tr>
          <td>numFooterRow</td>
          <td>0</td>
          <td><p>The number of footer rows in the table.</p></td>
        </tr>
        <tr>
          <td>rowHeight</td>
          <td>30</td>
          <td><p>The row height, which is necessary to calculate the height for the lazy rendering.</p></td>
        </tr>
        <tr>
          <td>minHeaderHeight</td>
          <td>30</td>
          <td><p>The minimum header height in pixels.</p></td>
        </tr>
        <tr>
          <td>footerHeight</td>
          <td>30</td>
          <td><p>The minimum footer height in pixels.</p></td>
        </tr>
        <tr>
          <td>hasHeader</td>
          <td>true</td>
          <td><p>Shows the header block.</p></td>
        </tr>
        <tr>
          <td>hasFooter</td>
          <td>true</td>
          <td><p>Shows a the footer block.</p></td>
        </tr>
        <tr>
          <td>forceFillColumns</td>
          <td>false</td>
          <td><p>Expands the columns to fill the given width.</p></td>
        </tr>
        <tr>
          <td>enableColumnReorder</td>
          <td>true</td>
          <td><p>Allows the user the reorder the columns to their liking.</p></td>
        </tr>
        <tr>
          <td>enableContentSelection</td>
          <td>false</td>
          <td><p>Allows the user to select a table cell text content.</p></td>
        </tr>
        <tr>
          <td>selectionMode</td>
          <td>"single"</td>
          <td><p>Sets which row selection behavior to follow. Possible values are "none" (clicking on a row does nothing), "single" (clicking on a row selects it and deselects other rows), and "multiple" (multiple rows can be selected through ctrl/cmd-click or shift-click).</p></td>
        </tr>
      </table>

      <h2>Ember.Table.ColumnDefinition Options</h2>
      <table class="table ember-table-options">
        <tr>
          <th style="width: 200px;">Option</th>
          <th style="width: 150px;">Default</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>headerCellName</td>
          <td>undefined</td>
          <td><p>Text that appears in the column header.</p></td>
        </tr>
        <tr>
          <td>contentPath</td>
          <td>undefined</td>
          <td><p>Path of the content for a cell. Given a row, this is the
            path of the value that is extracted from that row.</p></td>
        </tr>
        <tr>
          <td>minWidth</td>
          <td>undefined</td>
          <td><p>Minimum width of the column.</p></td>
        </tr>
        <tr>
          <td>maxWidth</td>
          <td>undefined</td>
          <td><p>Maximum width of the column.</p></td>
        </tr>
        <tr>
          <td>defaultColumnWidth</td>
          <td>150</td>
          <td><p>The width of the column, by default (in pixels).</p></td>
        </tr>
        <tr>
          <td>isResizable</td>
          <td>yes</td>
          <td><p>If yes then the column can be resized, otherwise it
            cannot.</p></td>
        </tr>
        <tr>
          <td>isSortable</td>
          <td>yes</td>
          <td><p>If yes then the column can be sorted.</p></td>
        </tr>
        <tr>
          <td>textAlign</td>
          <td>'text-align-right'</td>
          <td><p>Aligns text left/center/right in the column.</p></td>
        </tr>
        <tr>
          <td>canAutoResize</td>
          <td>yes</td>
          <td><p>If yes then column will automatically resized to be
            larger when there is additional space for the table.</p></td>
        </tr>
      </table>

      <h2>Ember.Table.TableCell Options</h2>
      <table class="table ember-table-options">
        <tr>
          <th style="width: 200px;">Option</th>
          <th style="width: 150px;">Default</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>templateName</td>
          <td>'table-cell'</td>
          <td><p>The name of the template to be rendered into the cell.
            Used for rendering custom templates<p></td>
        </tr>
        <tr>
          <td>classNames</td>
          <td>['ember-table-cell']</td>
          <td><p>The class names applied to the cell. Override to give
            the cell custom styling (border, background color, etc.)<p></td>
        </tr>
        <tr>
          <td>classNameBindings</td>
          <td>'column.textAlign'</td>
          <td><p>A binding used to dynamically associate class names
            with this table cell. E.g. you can bind to a column property
            to have cell colors or styles vary across columns.<p></td>
        </tr>
        <tr>
          <td>styleBindings</td>
          <td>'width'</td>
          <td><p>Values which are bound to the cell's style attr. See
            Ember.STyleBindingsMixin documentation for more details.<p></td>
        </tr>
      </table>

      <h2>Ember.Table.HeaderCell Options</h2>
      <table class="table ember-table-options">
        <tr>
          <th style="width: 200px;">Option</th>
          <th style="width: 150px;">Default</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>templateName</td>
          <td>'table-cell'</td>
          <td><p>The name of the template to be rendered into the cell.
            Used for rendering custom templates<p></td>
        </tr>
        <tr>
          <td>classNames</td>
          <td>['ember-table-cell']</td>
          <td><p>The class names applied to the cell. Override to give
            the cell custom styling (border, background color, etc.)<p></td>
        </tr>
        <tr>
          <td>classNameBindings</td>
          <td>'column.textAlign'</td>
          <td><p>A binding used to dynamically associate class names
            with this table cell. E.g. you can bind to a column property
            to have cell colors or styles vary across columns.<p></td>
        </tr>
        <tr>
          <td>styleBindings</td>
          <td>'width'</td>
          <td><p>Values which are bound to the cell's style attr. See
            Ember.STyleBindingsMixin documentation for more details.<p></td>
      </table>
    </div>
  </div>
</div>
